<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Errors;


use Polar\Models\Errors;
use Polar\Utils;

class NotPermitted
{
    /**
     *
     * @var NotPermittedError $error
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('error')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Errors\NotPermittedError')]
    public NotPermittedError $error;

    /**
     *
     * @var string $detail
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('detail')]
    public string $detail;

    /**
     * @param  NotPermittedError  $error
     * @param  string  $detail
     */
    public function __construct(string $detail, NotPermittedError $error = NotPermittedError::NotPermitted)
    {
        $this->error = $error;
        $this->detail = $detail;
    }

    public function toException(): NotPermittedThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new NotPermittedThrowable($message, (int) $code, $this);
    }
}