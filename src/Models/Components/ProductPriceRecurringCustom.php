<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Polar\Models\Components;


/** ProductPriceRecurringCustom - A pay-what-you-want recurring price for a product, i.e. a subscription. */
class ProductPriceRecurringCustom
{
    /**
     * Creation timestamp of the object.
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     * The ID of the price.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Whether the price is archived and no longer available.
     *
     * @var bool $isArchived
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_archived')]
    public bool $isArchived;

    /**
     * The ID of the product owning the price.
     *
     * @var string $productId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('product_id')]
    public string $productId;

    /**
     * The currency.
     *
     * @var string $priceCurrency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('price_currency')]
    public string $priceCurrency;

    /**
     *
     * @var SubscriptionRecurringInterval $recurringInterval
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('recurring_interval')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\SubscriptionRecurringInterval')]
    public SubscriptionRecurringInterval $recurringInterval;

    /**
     * Last modification timestamp of the object.
     *
     * @var ?\DateTime $modifiedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('modified_at')]
    public ?\DateTime $modifiedAt;

    /**
     * The minimum amount the customer can pay.
     *
     * @var ?int $minimumAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('minimum_amount')]
    public ?int $minimumAmount;

    /**
     * The maximum amount the customer can pay.
     *
     * @var ?int $maximumAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('maximum_amount')]
    public ?int $maximumAmount;

    /**
     * The initial amount shown to the customer.
     *
     * @var ?int $presetAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('preset_amount')]
    public ?int $presetAmount;

    /**
     *
     * @var ProductPriceRecurringCustomAmountType $amountType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount_type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\ProductPriceRecurringCustomAmountType')]
    public ProductPriceRecurringCustomAmountType $amountType;

    /**
     * The type of the price.
     *
     * @var ProductPriceRecurringCustomType $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Polar\Models\Components\ProductPriceRecurringCustomType')]
    public ProductPriceRecurringCustomType $type;

    /**
     * @param  \DateTime  $createdAt
     * @param  string  $id
     * @param  ProductPriceRecurringCustomAmountType  $amountType
     * @param  bool  $isArchived
     * @param  string  $productId
     * @param  string  $priceCurrency
     * @param  ProductPriceRecurringCustomType  $type
     * @param  SubscriptionRecurringInterval  $recurringInterval
     * @param  ?\DateTime  $modifiedAt
     * @param  ?int  $minimumAmount
     * @param  ?int  $maximumAmount
     * @param  ?int  $presetAmount
     */
    public function __construct(\DateTime $createdAt, string $id, bool $isArchived, string $productId, string $priceCurrency, SubscriptionRecurringInterval $recurringInterval, ?\DateTime $modifiedAt = null, ?int $minimumAmount = null, ?int $maximumAmount = null, ?int $presetAmount = null, ProductPriceRecurringCustomAmountType $amountType = ProductPriceRecurringCustomAmountType::Custom, ProductPriceRecurringCustomType $type = ProductPriceRecurringCustomType::Recurring)
    {
        $this->createdAt = $createdAt;
        $this->id = $id;
        $this->isArchived = $isArchived;
        $this->productId = $productId;
        $this->priceCurrency = $priceCurrency;
        $this->recurringInterval = $recurringInterval;
        $this->modifiedAt = $modifiedAt;
        $this->minimumAmount = $minimumAmount;
        $this->maximumAmount = $maximumAmount;
        $this->presetAmount = $presetAmount;
        $this->amountType = $amountType;
        $this->type = $type;
    }
}